"""initial_tables

Revision ID: a221d65efa29
Revises: 
Create Date: 2022-09-12 13:59:23.567426

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a221d65efa29"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "experiment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("laboratory", sa.String(), nullable=True),
        sa.Column("researcher", sa.String(), nullable=True),
        sa.Column("date", sa.String(), nullable=True),
        sa.Column(
            "experiment_type",
            sa.Enum("FA", "QS", "TM", name="experiment_type"),
            nullable=True,
        ),
        sa.Column("fracture", sa.Boolean(), nullable=True),
        sa.Column(
            "fracture_mode",
            sa.Enum(
                "Mode I", "Mode II", "Mode III", "Mixed-Mode", "", name="fracture_mode"
            ),
            nullable=True,
        ),
        sa.Column(
            "fatigue_test_type",
            sa.Enum("CA", "VA", "BL", "Combined", "", name="fatigue_test_type"),
            nullable=True,
        ),
        sa.Column(
            "quasi_static_test_type",
            sa.Enum(
                "Tensile",
                "Compressive",
                "Shear",
                "Bending",
                "Fracture",
                "Unspecified",
                "",
                name="quasi_static_test_type",
            ),
            nullable=True,
        ),
        sa.Column(
            "temperature_test_type",
            sa.Enum(
                "DMA", "DSC", "FIRE", "Unspecified", "", name="temperature_test_type"
            ),
            nullable=True,
        ),
        sa.Column("measuring_equipment", sa.String(), nullable=True),
        sa.Column("reliability_level", sa.Float(), nullable=True),
        sa.Column(
            "control_mode",
            sa.Enum(
                "Load Controlled", "Displacement Controlled", "", name="control_mode"
            ),
            nullable=True,
        ),
        sa.Column("publication_title", sa.String(), nullable=True),
        sa.Column("publication_author", sa.String(), nullable=True),
        sa.Column("publication_year", sa.String(), nullable=True),
        sa.Column("publication_doi", sa.String(), nullable=True),
        sa.Column("publication_images_repository", sa.String(), nullable=True),
        sa.Column("material_type_sample_type", sa.String(), nullable=True),
        sa.Column("material_type_fiber_material", sa.String(), nullable=True),
        sa.Column("material_type_fiber_form", sa.String(), nullable=True),
        sa.Column("material_type_area_density", sa.Float(), nullable=True),
        sa.Column("material_type_resin", sa.String(), nullable=True),
        sa.Column("material_type_hardener", sa.String(), nullable=True),
        sa.Column("material_type_mixing_ratio", sa.String(), nullable=True),
        sa.Column("laminates_and_assemblies_curing_time", sa.Float(), nullable=True),
        sa.Column(
            "laminates_and_assemblies_curing_temperature", sa.Float(), nullable=True
        ),
        sa.Column(
            "laminates_and_assemblies_curing_pressure", sa.Float(), nullable=True
        ),
        sa.Column(
            "laminates_and_assemblies_fiber_volume_ratio", sa.Float(), nullable=True
        ),
        sa.Column(
            "laminates_and_assemblies_stacking_sequence", sa.String(), nullable=True
        ),
        sa.Column("measurement_measuring_points", sa.Integer(), nullable=True),
        sa.Column("dic_analysis_subset_size", sa.Integer(), nullable=True),
        sa.Column("dic_analysis_step_size", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "test",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("experiment_id", sa.Integer(), nullable=True),
        sa.Column("specimen_number", sa.Integer(), nullable=True),
        sa.Column("specimen_name", sa.String(), nullable=True),
        sa.Column("stress_ratio", sa.Float(), nullable=True),
        sa.Column("maximum_stress", sa.Float(), nullable=True),
        sa.Column("frequency", sa.Float(), nullable=True),
        sa.Column("run_out", sa.Boolean(), nullable=True),
        sa.Column("displacement_controlled_loading_rate", sa.Float(), nullable=True),
        sa.Column("load_controlled_loading_rate", sa.Float(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("width", sa.Float(), nullable=True),
        sa.Column("thickness", sa.Float(), nullable=True),
        sa.Column("temperature", sa.Float(), nullable=True),
        sa.Column("humidity", sa.Float(), nullable=True),
        sa.Column("initial_crack_length", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "test_measuring_point",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=True),
        sa.Column("x_coordinate", sa.Float(), nullable=True),
        sa.Column("y_coordinate", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["test.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("test_measuring_point")
    op.drop_table("test")
    op.drop_table("experiment")
    # ### end Alembic commands ###
