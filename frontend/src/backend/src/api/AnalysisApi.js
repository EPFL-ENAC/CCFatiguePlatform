/**
 * ccfatigue
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import HTTPValidationError from "../model/HTTPValidationError";
import PageExperimentModel from "../model/PageExperimentModel";
import SnCurveMethod from "../model/SnCurveMethod";

/**
 * Analysis service.
 * @module api/AnalysisApi
 * @version 0.1.0
 */
export default class AnalysisApi {
  /**
   * Constructs a new AnalysisApi.
   * @alias module:api/AnalysisApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the runSnCurveFileAnalysisSnCurveFilePost operation.
   * @callback module:api/AnalysisApi~runSnCurveFileAnalysisSnCurveFilePostCallback
   * @param {String} error Error message, if any.
   * @param {module:model/PageExperimentModel} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Run Sn Curve File
   * @param {Array.<module:model/SnCurveMethod>} methods
   * @param {Array.<Number>} rRatios
   * @param {File} file
   * @param {Object} opts Optional parameters
   * @param {Number} opts.page  (default to 1)
   * @param {Number} opts.size  (default to 50)
   * @param {module:api/AnalysisApi~runSnCurveFileAnalysisSnCurveFilePostCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/PageExperimentModel}
   */
  runSnCurveFileAnalysisSnCurveFilePost(
    methods,
    rRatios,
    file,
    opts,
    callback
  ) {
    opts = opts || {};
    let postBody = null;
    // verify the required parameter 'methods' is set
    if (methods === undefined || methods === null) {
      throw new Error(
        "Missing the required parameter 'methods' when calling runSnCurveFileAnalysisSnCurveFilePost"
      );
    }
    // verify the required parameter 'rRatios' is set
    if (rRatios === undefined || rRatios === null) {
      throw new Error(
        "Missing the required parameter 'rRatios' when calling runSnCurveFileAnalysisSnCurveFilePost"
      );
    }
    // verify the required parameter 'file' is set
    if (file === undefined || file === null) {
      throw new Error(
        "Missing the required parameter 'file' when calling runSnCurveFileAnalysisSnCurveFilePost"
      );
    }

    let pathParams = {};
    let queryParams = {
      methods: this.apiClient.buildCollectionParam(methods, "multi"),
      rRatios: this.apiClient.buildCollectionParam(rRatios, "multi"),
      page: opts["page"],
      size: opts["size"],
    };
    let headerParams = {};
    let formParams = {
      file: file,
    };

    let authNames = [];
    let contentTypes = ["multipart/form-data"];
    let accepts = ["application/json"];
    let returnType = PageExperimentModel;
    return this.apiClient.callApi(
      "/analysis/snCurve/file",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback
    );
  }
}
