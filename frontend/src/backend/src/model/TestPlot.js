/**
 * ccfatigue
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The TestPlot model module.
 * @module model/TestPlot
 * @version 0.1.0
 */
class TestPlot {
  /**
   * Constructs a new <code>TestPlot</code>.
   * Defines Test metadata related to a plot
   * @alias module:model/TestPlot
   * @param testId {Number}
   * @param specimenId {Number}
   * @param color {String}
   * @param totalDissipatedEnergy {Number}
   */
  constructor(testId, specimenId, color, totalDissipatedEnergy) {
    TestPlot.initialize(this, testId, specimenId, color, totalDissipatedEnergy);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, testId, specimenId, color, totalDissipatedEnergy) {
    obj["test_id"] = testId;
    obj["specimen_id"] = specimenId;
    obj["color"] = color;
    obj["total_dissipated_energy"] = totalDissipatedEnergy;
  }

  /**
   * Constructs a <code>TestPlot</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TestPlot} obj Optional instance to populate.
   * @return {module:model/TestPlot} The populated <code>TestPlot</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TestPlot();

      if (data.hasOwnProperty("test_id")) {
        obj["test_id"] = ApiClient.convertToType(data["test_id"], "Number");
      }
      if (data.hasOwnProperty("specimen_id")) {
        obj["specimen_id"] = ApiClient.convertToType(
          data["specimen_id"],
          "Number"
        );
      }
      if (data.hasOwnProperty("color")) {
        obj["color"] = ApiClient.convertToType(data["color"], "String");
      }
      if (data.hasOwnProperty("total_dissipated_energy")) {
        obj["total_dissipated_energy"] = ApiClient.convertToType(
          data["total_dissipated_energy"],
          "Number"
        );
      }
    }
    return obj;
  }
}

/**
 * @member {Number} test_id
 */
TestPlot.prototype["test_id"] = undefined;

/**
 * @member {Number} specimen_id
 */
TestPlot.prototype["specimen_id"] = undefined;

/**
 * @member {String} color
 */
TestPlot.prototype["color"] = undefined;

/**
 * @member {Number} total_dissipated_energy
 */
TestPlot.prototype["total_dissipated_energy"] = undefined;

export default TestPlot;
