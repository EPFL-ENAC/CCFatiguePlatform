/**
 * ccfatigue
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define(["expect.js", process.cwd() + "/src/index"], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require(process.cwd() + "/src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Ccfatigue);
  }
})(this, function (expect, Ccfatigue) {
  "use strict";

  var instance;

  beforeEach(function () {
    instance = new Ccfatigue.ExperimentModel();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === "function") return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === "function") object[setter](value);
    else object[property] = value;
  };

  describe("ExperimentModel", function () {
    it("should create an instance of ExperimentModel", function () {
      // uncomment below and update the code to test ExperimentModel
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be.a(Ccfatigue.ExperimentModel);
    });

    it('should have the property id (base name: "id")', function () {
      // uncomment below and update the code to test the property id
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laboratory (base name: "laboratory")', function () {
      // uncomment below and update the code to test the property laboratory
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property researcher (base name: "researcher")', function () {
      // uncomment below and update the code to test the property researcher
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function () {
      // uncomment below and update the code to test the property date
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property experimentType (base name: "experiment_type")', function () {
      // uncomment below and update the code to test the property experimentType
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property fracture (base name: "fracture")', function () {
      // uncomment below and update the code to test the property fracture
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property fractureMode (base name: "fracture_mode")', function () {
      // uncomment below and update the code to test the property fractureMode
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property initialCrackLength (base name: "initial_crack_length")', function () {
      // uncomment below and update the code to test the property initialCrackLength
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property fatigueTestType (base name: "fatigue_test_type")', function () {
      // uncomment below and update the code to test the property fatigueTestType
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property measuringEquipment (base name: "measuring_equipment")', function () {
      // uncomment below and update the code to test the property measuringEquipment
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property reliabilityLevel (base name: "reliability_level")', function () {
      // uncomment below and update the code to test the property reliabilityLevel
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property controlMode (base name: "control_mode")', function () {
      // uncomment below and update the code to test the property controlMode
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property publicationTitle (base name: "publication_title")', function () {
      // uncomment below and update the code to test the property publicationTitle
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property publicationAuthor (base name: "publication_author")', function () {
      // uncomment below and update the code to test the property publicationAuthor
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property publicationYear (base name: "publication_year")', function () {
      // uncomment below and update the code to test the property publicationYear
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property publicationDoi (base name: "publication_doi")', function () {
      // uncomment below and update the code to test the property publicationDoi
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property publicationImagesRepository (base name: "publication_images_repository")', function () {
      // uncomment below and update the code to test the property publicationImagesRepository
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeFiberMaterial (base name: "material_type_fiber_material")', function () {
      // uncomment below and update the code to test the property materialTypeFiberMaterial
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeFiberGeometry (base name: "material_type_fiber_geometry")', function () {
      // uncomment below and update the code to test the property materialTypeFiberGeometry
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeAreaDensity (base name: "material_type_area_density")', function () {
      // uncomment below and update the code to test the property materialTypeAreaDensity
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeResin (base name: "material_type_resin")', function () {
      // uncomment below and update the code to test the property materialTypeResin
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeHardener (base name: "material_type_hardener")', function () {
      // uncomment below and update the code to test the property materialTypeHardener
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property materialTypeMixingRatio (base name: "material_type_mixing_ratio")', function () {
      // uncomment below and update the code to test the property materialTypeMixingRatio
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property geometryLength (base name: "geometry_length")', function () {
      // uncomment below and update the code to test the property geometryLength
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property geometryWidth (base name: "geometry_width")', function () {
      // uncomment below and update the code to test the property geometryWidth
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property geometryThickness (base name: "geometry_thickness")', function () {
      // uncomment below and update the code to test the property geometryThickness
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laminatesAndAssembliesCuringTime (base name: "laminates_and_assemblies_curing_time")', function () {
      // uncomment below and update the code to test the property laminatesAndAssembliesCuringTime
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laminatesAndAssembliesCuringTemperature (base name: "laminates_and_assemblies_curing_temperature")', function () {
      // uncomment below and update the code to test the property laminatesAndAssembliesCuringTemperature
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laminatesAndAssembliesCuringPressure (base name: "laminates_and_assemblies_curing_pressure")', function () {
      // uncomment below and update the code to test the property laminatesAndAssembliesCuringPressure
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laminatesAndAssembliesFiberContent (base name: "laminates_and_assemblies_fiber_content")', function () {
      // uncomment below and update the code to test the property laminatesAndAssembliesFiberContent
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property laminatesAndAssembliesStackingSequence (base name: "laminates_and_assemblies_stacking_sequence")', function () {
      // uncomment below and update the code to test the property laminatesAndAssembliesStackingSequence
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property testCondtionsTemperature (base name: "test_condtions_temperature")', function () {
      // uncomment below and update the code to test the property testCondtionsTemperature
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property testCondtionsHumidity (base name: "test_condtions_humidity")', function () {
      // uncomment below and update the code to test the property testCondtionsHumidity
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property dicAnalysisSubsetSize (base name: "dic_analysis_subset_size")', function () {
      // uncomment below and update the code to test the property dicAnalysisSubsetSize
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });

    it('should have the property dicAnalysisStepSize (base name: "dic_analysis_step_size")', function () {
      // uncomment below and update the code to test the property dicAnalysisStepSize
      //var instance = new Ccfatigue.ExperimentModel();
      //expect(instance).to.be();
    });
  });
});
