{
  "openapi": "3.0.2",
  "info": {
    "title": "ccfatigue",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Get AppInfo",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo"
                }
              }
            }
          }
        }
      }
    },
    "/units": {
      "get": {
        "summary": "Get Units",
        "description": "Get All standardized units",
        "operationId": "get_units_units_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Units Units Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/experiments": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get Experiments",
        "description": "Get all experiments",
        "operationId": "get_experiments_experiments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string",
              "default": ""
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Text Search",
              "type": "string",
              "default": ""
            },
            "name": "text_search",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Size",
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ExperimentModel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/experiments/{field}/distinct": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get Field Distinct",
        "description": "Get all distinct values for field column, sorted",
        "operationId": "get_field_distinct_experiments__field__distinct_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ExperimentFieldNames"
            },
            "name": "field",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Field Distinct Experiments  Field  Distinct Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/experiments/tests_dashboard_plots": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get Tests Dashboard Plots",
        "description": "Return the 4 Bokeh plots used in Test Dashboard\n\nNote: as we don't have real data yet, we hard code things this so it will\nrender the 10 first tests of the experiment 1 (only experiment we have) :\n+ experiment=1\n+ 1<tests_ids<10\nthen we mascarade test_id field so that it looks like\nto be matching the one asked for.",
        "operationId": "get_tests_dashboard_plots_experiments_tests_dashboard_plots_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Experiment Id",
              "type": "integer",
              "default": ""
            },
            "name": "experiment_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Test Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "default": []
            },
            "name": "test_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardPlots"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Tests",
        "description": "Get all tests for specific experiment",
        "operationId": "get_tests_tests_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Experiment Id",
              "type": "integer"
            },
            "name": "experiment_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Size",
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_TestModel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/snCurve/file": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "Run Sn Curve File",
        "operationId": "run_sn_curve_file_analysis_snCurve_file_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SnCurveMethod"
              }
            },
            "name": "methods",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Rratios",
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "name": "rRatios",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Size",
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "size",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_run_sn_curve_file_analysis_snCurve_file_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ExperimentModel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppInfo": {
        "title": "AppInfo",
        "required": [
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "description": "App Info"
      },
      "Body_run_sn_curve_file_analysis_snCurve_file_post": {
        "title": "Body_run_sn_curve_file_analysis_snCurve_file_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "DashboardPlots": {
        "title": "DashboardPlots",
        "required": [
          "tests",
          "plots"
        ],
        "type": "object",
        "properties": {
          "tests": {
            "title": "Tests",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestPlot"
            }
          },
          "plots": {
            "$ref": "#/components/schemas/Plots"
          }
        },
        "description": "Defines data returned to the dashboard"
      },
      "ExperimentFieldNames": {
        "title": "ExperimentFieldNames",
        "enum": [
          "fracture_mode",
          "material_type_fiber_material",
          "material_type_resin",
          "laminates_and_assemblies_stacking_sequence"
        ],
        "type": "string",
        "description": "Enumerate all fields that can be requested as distinct"
      },
      "ExperimentModel": {
        "title": "ExperimentModel",
        "required": [
          "id",
          "laboratory",
          "researcher",
          "experiment_type",
          "fracture",
          "geometry_length",
          "geometry_width",
          "geometry_thickness"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "laboratory": {
            "title": "Laboratory",
            "type": "string"
          },
          "researcher": {
            "title": "Researcher",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "type": "string"
          },
          "experiment_type": {
            "title": "Experiment Type",
            "type": "string"
          },
          "fracture": {
            "title": "Fracture",
            "type": "boolean"
          },
          "fracture_mode": {
            "title": "Fracture Mode",
            "type": "string"
          },
          "initial_crack_length": {
            "title": "Initial Crack Length",
            "type": "number"
          },
          "fatigue_test_type": {
            "title": "Fatigue Test Type",
            "type": "string"
          },
          "measuring_equipment": {
            "title": "Measuring Equipment",
            "type": "string"
          },
          "reliability_level": {
            "title": "Reliability Level",
            "type": "number"
          },
          "control_mode": {
            "title": "Control Mode",
            "type": "string"
          },
          "publication_title": {
            "title": "Publication Title",
            "type": "string"
          },
          "publication_author": {
            "title": "Publication Author",
            "type": "string"
          },
          "publication_year": {
            "title": "Publication Year",
            "type": "string"
          },
          "publication_doi": {
            "title": "Publication Doi",
            "type": "string"
          },
          "publication_images_repository": {
            "title": "Publication Images Repository",
            "type": "string"
          },
          "material_type_fiber_material": {
            "title": "Material Type Fiber Material",
            "type": "string"
          },
          "material_type_fiber_geometry": {
            "title": "Material Type Fiber Geometry",
            "type": "string"
          },
          "material_type_area_density": {
            "title": "Material Type Area Density",
            "type": "number"
          },
          "material_type_resin": {
            "title": "Material Type Resin",
            "type": "string"
          },
          "material_type_hardener": {
            "title": "Material Type Hardener",
            "type": "string"
          },
          "material_type_mixing_ratio": {
            "title": "Material Type Mixing Ratio",
            "type": "string"
          },
          "geometry_length": {
            "title": "Geometry Length",
            "type": "number"
          },
          "geometry_width": {
            "title": "Geometry Width",
            "type": "number"
          },
          "geometry_thickness": {
            "title": "Geometry Thickness",
            "type": "number"
          },
          "laminates_and_assemblies_curing_time": {
            "title": "Laminates And Assemblies Curing Time",
            "type": "number"
          },
          "laminates_and_assemblies_curing_temperature": {
            "title": "Laminates And Assemblies Curing Temperature",
            "type": "number"
          },
          "laminates_and_assemblies_curing_pressure": {
            "title": "Laminates And Assemblies Curing Pressure",
            "type": "number"
          },
          "laminates_and_assemblies_fiber_content": {
            "title": "Laminates And Assemblies Fiber Content",
            "type": "number"
          },
          "laminates_and_assemblies_stacking_sequence": {
            "title": "Laminates And Assemblies Stacking Sequence",
            "type": "string"
          },
          "test_condtions_temperature": {
            "title": "Test Condtions Temperature",
            "type": "number"
          },
          "test_condtions_humidity": {
            "title": "Test Condtions Humidity",
            "type": "number"
          },
          "dic_analysis_subset_size": {
            "title": "Dic Analysis Subset Size",
            "type": "integer"
          },
          "dic_analysis_step_size": {
            "title": "Dic Analysis Step Size",
            "type": "integer"
          }
        },
        "description": "Defines how experiment is seen on the API"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Page_ExperimentModel_": {
        "title": "Page[ExperimentModel]",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperimentModel"
            }
          },
          "total": {
            "title": "Total",
            "minimum": 0.0,
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "minimum": 1.0,
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "Page_TestModel_": {
        "title": "Page[TestModel]",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestModel"
            }
          },
          "total": {
            "title": "Total",
            "minimum": 0.0,
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "minimum": 1.0,
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "Plots": {
        "title": "Plots",
        "type": "object",
        "properties": {
          "stress_strain": {
            "title": "Stress Strain"
          },
          "creep": {
            "title": "Creep"
          },
          "hysteresis_area": {
            "title": "Hysteresis Area"
          },
          "stiffness": {
            "title": "Stiffness"
          }
        },
        "description": "Defines all plots types returned"
      },
      "SnCurveMethod": {
        "title": "SnCurveMethod",
        "enum": [
          "LinLog",
          "LogLog",
          "Sendeckyj",
          "Whitney"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TestModel": {
        "title": "TestModel",
        "required": [
          "id",
          "experiment_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "experiment_id": {
            "title": "Experiment Id",
            "type": "integer"
          },
          "specimen_number": {
            "title": "Specimen Number",
            "type": "string"
          },
          "stress_ratio": {
            "title": "Stress Ratio",
            "type": "number"
          },
          "maximum_stress": {
            "title": "Maximum Stress",
            "type": "number"
          },
          "loading_rate": {
            "title": "Loading Rate",
            "type": "number"
          },
          "run_out": {
            "title": "Run Out",
            "type": "boolean"
          }
        },
        "description": "Defines how test is seen on the API"
      },
      "TestPlot": {
        "title": "TestPlot",
        "required": [
          "test_id",
          "specimen_id",
          "color",
          "total_dissipated_energy"
        ],
        "type": "object",
        "properties": {
          "test_id": {
            "title": "Test Id",
            "type": "integer"
          },
          "specimen_id": {
            "title": "Specimen Id",
            "type": "integer"
          },
          "color": {
            "title": "Color",
            "type": "string"
          },
          "total_dissipated_energy": {
            "title": "Total Dissipated Energy",
            "type": "integer"
          }
        },
        "description": "Defines Test metadata related to a plot"
      },
      "UnitInfo": {
        "title": "UnitInfo",
        "required": [
          "subject",
          "unit"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "title": "Subject",
            "type": "string"
          },
          "unit": {
            "title": "Unit",
            "type": "string"
          }
        },
        "description": "Unit Info"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}